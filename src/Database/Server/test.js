IncomingMessage {
	_readableState: 
	 ReadableState {
	   objectMode: false,
	   highWaterMark: 16384,
	   buffer: BufferList { head: null, tail: null, length: 0 },
	   length: 0,
	   pipes: null,
	   pipesCount: 0,
	   flowing: true,
	   ended: true,
	   endEmitted: true,
	   reading: false,
	   sync: false,
	   needReadable: false,
	   emittedReadable: false,
	   readableListening: false,
	   resumeScheduled: false,
	   destroyed: false,
	   defaultEncoding: 'utf8',
	   awaitDrain: 0,
	   readingMore: false,
	   decoder: null,
	   encoding: null },
	readable: false,
	domain: null,
	_events: {},
	_eventsCount: 0,
	_maxListeners: undefined,
	socket: 
	 Socket {
	   connecting: false,
	   _hadError: false,
	   _handle: 
		TCP {
		  reading: true,
		  owner: [Circular],
		  onread: [Function: onread],
		  onconnection: null,
		  writeQueueSize: 0,
		  _consumed: true },
	   _parent: null,
	   _host: null,
	   _readableState: 
		ReadableState {
		  objectMode: false,
		  highWaterMark: 16384,
		  buffer: [Object],
		  length: 0,
		  pipes: null,
		  pipesCount: 0,
		  flowing: true,
		  ended: false,
		  endEmitted: false,
		  reading: true,
		  sync: false,
		  needReadable: true,
		  emittedReadable: false,
		  readableListening: false,
		  resumeScheduled: false,
		  destroyed: false,
		  defaultEncoding: 'utf8',
		  awaitDrain: 0,
		  readingMore: false,
		  decoder: null,
		  encoding: null },
	   readable: true,
	   domain: null,
	   _events: 
		{ end: [Array],
		  finish: [Function: onSocketFinish],
		  _socketEnd: [Function: onSocketEnd],
		  drain: [Array],
		  timeout: [Function: socketOnTimeout],
		  data: [Function: bound socketOnData],
		  error: [Function: socketOnError],
		  close: [Array],
		  resume: [Function: onSocketResume],
		  pause: [Function: onSocketPause] },
	   _eventsCount: 10,
	   _maxListeners: undefined,
	   _writableState: 
		WritableState {
		  objectMode: false,
		  highWaterMark: 16384,
		  finalCalled: false,
		  needDrain: false,
		  ending: false,
		  ended: false,
		  finished: false,
		  destroyed: false,
		  decodeStrings: false,
		  defaultEncoding: 'utf8',
		  length: 0,
		  writing: false,
		  corked: 0,
		  sync: true,
		  bufferProcessing: false,
		  onwrite: [Function: bound onwrite],
		  writecb: null,
		  writelen: 0,
		  bufferedRequest: null,
		  lastBufferedRequest: null,
		  pendingcb: 0,
		  prefinished: false,
		  errorEmitted: false,
		  bufferedRequestCount: 0,
		  corkedRequestsFree: [Object] },
	   writable: true,
	   allowHalfOpen: true,
	   _bytesDispatched: 0,
	   _sockname: null,
	   _pendingData: null,
	   _pendingEncoding: '',
	   server: 
		Server {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 2,
		  _maxListeners: undefined,
		  _connections: 2,
		  _handle: [Object],
		  _usingSlaves: false,
		  _slaves: [],
		  _unref: false,
		  allowHalfOpen: true,
		  pauseOnConnect: false,
		  httpAllowHalfOpen: false,
		  timeout: 120000,
		  keepAliveTimeout: 5000,
		  _pendingResponseData: 0,
		  maxHeadersCount: null,
		  _connectionKey: '6::::5000',
		  [Symbol(asyncId)]: 9 },
	   _server: 
		Server {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 2,
		  _maxListeners: undefined,
		  _connections: 2,
		  _handle: [Object],
		  _usingSlaves: false,
		  _slaves: [],
		  _unref: false,
		  allowHalfOpen: true,
		  pauseOnConnect: false,
		  httpAllowHalfOpen: false,
		  timeout: 120000,
		  keepAliveTimeout: 5000,
		  _pendingResponseData: 0,
		  maxHeadersCount: null,
		  _connectionKey: '6::::5000',
		  [Symbol(asyncId)]: 9 },
	   _idleTimeout: 120000,
	   _idleNext: 
		Socket {
		  connecting: false,
		  _hadError: false,
		  _handle: [Object],
		  _parent: null,
		  _host: null,
		  _readableState: [Object],
		  readable: true,
		  domain: null,
		  _events: [Object],
		  _eventsCount: 10,
		  _maxListeners: undefined,
		  _writableState: [Object],
		  writable: true,
		  allowHalfOpen: true,
		  _bytesDispatched: 0,
		  _sockname: null,
		  _pendingData: null,
		  _pendingEncoding: '',
		  server: [Object],
		  _server: [Object],
		  _idleTimeout: 120000,
		  _idleNext: [Object],
		  _idlePrev: [Circular],
		  _idleStart: 24446,
		  _destroyed: false,
		  parser: [Object],
		  on: [Function: socketOnWrap],
		  _paused: false,
		  read: [Function],
		  _consuming: true,
		  [Symbol(asyncId)]: 109,
		  [Symbol(bytesRead)]: 0,
		  [Symbol(asyncId)]: 110,
		  [Symbol(triggerAsyncId)]: 109 },
	   _idlePrev: 
		TimersList {
		  _idleNext: [Circular],
		  _idlePrev: [Object],
		  _timer: [Object],
		  _unrefed: true,
		  msecs: 120000,
		  nextTick: false },
	   _idleStart: 24478,
	   _destroyed: false,
	   parser: 
		HTTPParser {
		  '0': [Function: parserOnHeaders],
		  '1': [Function: parserOnHeadersComplete],
		  '2': [Function: parserOnBody],
		  '3': [Function: parserOnMessageComplete],
		  '4': [Function: bound onParserExecute],
		  _headers: [],
		  _url: '',
		  _consumed: true,
		  socket: [Circular],
		  incoming: [Circular],
		  outgoing: null,
		  maxHeaderPairs: 2000,
		  onIncoming: [Function: bound parserOnIncoming] },
	   on: [Function: socketOnWrap],
	   _paused: false,
	   read: [Function],
	   _consuming: true,
	   _httpMessage: 
		ServerResponse {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 1,
		  _maxListeners: undefined,
		  output: [],
		  outputEncodings: [],
		  outputCallbacks: [],
		  outputSize: 0,
		  writable: true,
		  _last: false,
		  upgrading: false,
		  chunkedEncoding: false,
		  shouldKeepAlive: true,
		  useChunkedEncodingByDefault: true,
		  sendDate: true,
		  _removedConnection: false,
		  _removedContLen: false,
		  _removedTE: false,
		  _contentLength: null,
		  _hasBody: true,
		  _trailer: '',
		  finished: false,
		  _headerSent: false,
		  socket: [Circular],
		  connection: [Circular],
		  _header: null,
		  _onPendingData: [Function: bound updateOutgoingData],
		  _sent100: false,
		  _expect_continue: false,
		  req: [Circular],
		  locals: {},
		  writeHead: [Function: writeHead],
		  end: [Function: end],
		  [Symbol(outHeadersKey)]: [Object] },
	   [Symbol(asyncId)]: 78,
	   [Symbol(bytesRead)]: 0,
	   [Symbol(asyncId)]: 79,
	   [Symbol(triggerAsyncId)]: 78 },
	connection: 
	 Socket {
	   connecting: false,
	   _hadError: false,
	   _handle: 
		TCP {
		  reading: true,
		  owner: [Circular],
		  onread: [Function: onread],
		  onconnection: null,
		  writeQueueSize: 0,
		  _consumed: true },
	   _parent: null,
	   _host: null,
	   _readableState: 
		ReadableState {
		  objectMode: false,
		  highWaterMark: 16384,
		  buffer: [Object],
		  length: 0,
		  pipes: null,
		  pipesCount: 0,
		  flowing: true,
		  ended: false,
		  endEmitted: false,
		  reading: true,
		  sync: false,
		  needReadable: true,
		  emittedReadable: false,
		  readableListening: false,
		  resumeScheduled: false,
		  destroyed: false,
		  defaultEncoding: 'utf8',
		  awaitDrain: 0,
		  readingMore: false,
		  decoder: null,
		  encoding: null },
	   readable: true,
	   domain: null,
	   _events: 
		{ end: [Array],
		  finish: [Function: onSocketFinish],
		  _socketEnd: [Function: onSocketEnd],
		  drain: [Array],
		  timeout: [Function: socketOnTimeout],
		  data: [Function: bound socketOnData],
		  error: [Function: socketOnError],
		  close: [Array],
		  resume: [Function: onSocketResume],
		  pause: [Function: onSocketPause] },
	   _eventsCount: 10,
	   _maxListeners: undefined,
	   _writableState: 
		WritableState {
		  objectMode: false,
		  highWaterMark: 16384,
		  finalCalled: false,
		  needDrain: false,
		  ending: false,
		  ended: false,
		  finished: false,
		  destroyed: false,
		  decodeStrings: false,
		  defaultEncoding: 'utf8',
		  length: 0,
		  writing: false,
		  corked: 0,
		  sync: true,
		  bufferProcessing: false,
		  onwrite: [Function: bound onwrite],
		  writecb: null,
		  writelen: 0,
		  bufferedRequest: null,
		  lastBufferedRequest: null,
		  pendingcb: 0,
		  prefinished: false,
		  errorEmitted: false,
		  bufferedRequestCount: 0,
		  corkedRequestsFree: [Object] },
	   writable: true,
	   allowHalfOpen: true,
	   _bytesDispatched: 0,
	   _sockname: null,
	   _pendingData: null,
	   _pendingEncoding: '',
	   server: 
		Server {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 2,
		  _maxListeners: undefined,
		  _connections: 2,
		  _handle: [Object],
		  _usingSlaves: false,
		  _slaves: [],
		  _unref: false,
		  allowHalfOpen: true,
		  pauseOnConnect: false,
		  httpAllowHalfOpen: false,
		  timeout: 120000,
		  keepAliveTimeout: 5000,
		  _pendingResponseData: 0,
		  maxHeadersCount: null,
		  _connectionKey: '6::::5000',
		  [Symbol(asyncId)]: 9 },
	   _server: 
		Server {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 2,
		  _maxListeners: undefined,
		  _connections: 2,
		  _handle: [Object],
		  _usingSlaves: false,
		  _slaves: [],
		  _unref: false,
		  allowHalfOpen: true,
		  pauseOnConnect: false,
		  httpAllowHalfOpen: false,
		  timeout: 120000,
		  keepAliveTimeout: 5000,
		  _pendingResponseData: 0,
		  maxHeadersCount: null,
		  _connectionKey: '6::::5000',
		  [Symbol(asyncId)]: 9 },
	   _idleTimeout: 120000,
	   _idleNext: 
		Socket {
		  connecting: false,
		  _hadError: false,
		  _handle: [Object],
		  _parent: null,
		  _host: null,
		  _readableState: [Object],
		  readable: true,
		  domain: null,
		  _events: [Object],
		  _eventsCount: 10,
		  _maxListeners: undefined,
		  _writableState: [Object],
		  writable: true,
		  allowHalfOpen: true,
		  _bytesDispatched: 0,
		  _sockname: null,
		  _pendingData: null,
		  _pendingEncoding: '',
		  server: [Object],
		  _server: [Object],
		  _idleTimeout: 120000,
		  _idleNext: [Object],
		  _idlePrev: [Circular],
		  _idleStart: 24446,
		  _destroyed: false,
		  parser: [Object],
		  on: [Function: socketOnWrap],
		  _paused: false,
		  read: [Function],
		  _consuming: true,
		  [Symbol(asyncId)]: 109,
		  [Symbol(bytesRead)]: 0,
		  [Symbol(asyncId)]: 110,
		  [Symbol(triggerAsyncId)]: 109 },
	   _idlePrev: 
		TimersList {
		  _idleNext: [Circular],
		  _idlePrev: [Object],
		  _timer: [Object],
		  _unrefed: true,
		  msecs: 120000,
		  nextTick: false },
	   _idleStart: 24478,
	   _destroyed: false,
	   parser: 
		HTTPParser {
		  '0': [Function: parserOnHeaders],
		  '1': [Function: parserOnHeadersComplete],
		  '2': [Function: parserOnBody],
		  '3': [Function: parserOnMessageComplete],
		  '4': [Function: bound onParserExecute],
		  _headers: [],
		  _url: '',
		  _consumed: true,
		  socket: [Circular],
		  incoming: [Circular],
		  outgoing: null,
		  maxHeaderPairs: 2000,
		  onIncoming: [Function: bound parserOnIncoming] },
	   on: [Function: socketOnWrap],
	   _paused: false,
	   read: [Function],
	   _consuming: true,
	   _httpMessage: 
		ServerResponse {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 1,
		  _maxListeners: undefined,
		  output: [],
		  outputEncodings: [],
		  outputCallbacks: [],
		  outputSize: 0,
		  writable: true,
		  _last: false,
		  upgrading: false,
		  chunkedEncoding: false,
		  shouldKeepAlive: true,
		  useChunkedEncodingByDefault: true,
		  sendDate: true,
		  _removedConnection: false,
		  _removedContLen: false,
		  _removedTE: false,
		  _contentLength: null,
		  _hasBody: true,
		  _trailer: '',
		  finished: false,
		  _headerSent: false,
		  socket: [Circular],
		  connection: [Circular],
		  _header: null,
		  _onPendingData: [Function: bound updateOutgoingData],
		  _sent100: false,
		  _expect_continue: false,
		  req: [Circular],
		  locals: {},
		  writeHead: [Function: writeHead],
		  end: [Function: end],
		  [Symbol(outHeadersKey)]: [Object] },
	   [Symbol(asyncId)]: 78,
	   [Symbol(bytesRead)]: 0,
	   [Symbol(asyncId)]: 79,
	   [Symbol(triggerAsyncId)]: 78 },
	httpVersionMajor: 1,
	httpVersionMinor: 1,
	httpVersion: '1.1',
	complete: true,
	headers: 
	 { host: 'localhost:5000',
	   connection: 'keep-alive',
	   'content-length': '89',
	   'cache-control': 'max-age=0',
	   'upgrade-insecure-requests': '1',
	   origin: 'http://localhost:5000',
	   'content-type': 'application/x-www-form-urlencoded',
	   'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36',
	   accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
	   'sec-fetch-site': 'same-origin',
	   'sec-fetch-mode': 'navigate',
	   'sec-fetch-user': '?1',
	   'sec-fetch-dest': 'document',
	   referer: 'http://localhost:5000/signup',
	   'accept-encoding': 'gzip, deflate, br',
	   'accept-language': 'en-US,en;q=0.9',
	   cookie: 'connect.sid=s%3Aqas_j0mOfq1-OmzcBj1MhH-0T2l6yexK.c2Mi93uvbm68zR0s9AldAlHQBI%2F30XNmEEJyFJB4n9A' },
	rawHeaders: 
	 [ 'Host',
	   'localhost:5000',
	   'Connection',
	   'keep-alive',
	   'Content-Length',
	   '89',
	   'Cache-Control',
	   'max-age=0',
	   'Upgrade-Insecure-Requests',
	   '1',
	   'Origin',
	   'http://localhost:5000',
	   'Content-Type',
	   'application/x-www-form-urlencoded',
	   'User-Agent',
	   'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36',
	   'Accept',
	   'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
	   'Sec-Fetch-Site',
	   'same-origin',
	   'Sec-Fetch-Mode',
	   'navigate',
	   'Sec-Fetch-User',
	   '?1',
	   'Sec-Fetch-Dest',
	   'document',
	   'Referer',
	   'http://localhost:5000/signup',
	   'Accept-Encoding',
	   'gzip, deflate, br',
	   'Accept-Language',
	   'en-US,en;q=0.9',
	   'Cookie',
	   'connect.sid=s%3Aqas_j0mOfq1-OmzcBj1MhH-0T2l6yexK.c2Mi93uvbm68zR0s9AldAlHQBI%2F30XNmEEJyFJB4n9A' ],
	trailers: {},
	rawTrailers: [],
	upgrade: false,
	url: '/signup',
	method: 'POST',
	statusCode: null,
	statusMessage: null,
	client: 
	 Socket {
	   connecting: false,
	   _hadError: false,
	   _handle: 
		TCP {
		  reading: true,
		  owner: [Circular],
		  onread: [Function: onread],
		  onconnection: null,
		  writeQueueSize: 0,
		  _consumed: true },
	   _parent: null,
	   _host: null,
	   _readableState: 
		ReadableState {
		  objectMode: false,
		  highWaterMark: 16384,
		  buffer: [Object],
		  length: 0,
		  pipes: null,
		  pipesCount: 0,
		  flowing: true,
		  ended: false,
		  endEmitted: false,
		  reading: true,
		  sync: false,
		  needReadable: true,
		  emittedReadable: false,
		  readableListening: false,
		  resumeScheduled: false,
		  destroyed: false,
		  defaultEncoding: 'utf8',
		  awaitDrain: 0,
		  readingMore: false,
		  decoder: null,
		  encoding: null },
	   readable: true,
	   domain: null,
	   _events: 
		{ end: [Array],
		  finish: [Function: onSocketFinish],
		  _socketEnd: [Function: onSocketEnd],
		  drain: [Array],
		  timeout: [Function: socketOnTimeout],
		  data: [Function: bound socketOnData],
		  error: [Function: socketOnError],
		  close: [Array],
		  resume: [Function: onSocketResume],
		  pause: [Function: onSocketPause] },
	   _eventsCount: 10,
	   _maxListeners: undefined,
	   _writableState: 
		WritableState {
		  objectMode: false,
		  highWaterMark: 16384,
		  finalCalled: false,
		  needDrain: false,
		  ending: false,
		  ended: false,
		  finished: false,
		  destroyed: false,
		  decodeStrings: false,
		  defaultEncoding: 'utf8',
		  length: 0,
		  writing: false,
		  corked: 0,
		  sync: true,
		  bufferProcessing: false,
		  onwrite: [Function: bound onwrite],
		  writecb: null,
		  writelen: 0,
		  bufferedRequest: null,
		  lastBufferedRequest: null,
		  pendingcb: 0,
		  prefinished: false,
		  errorEmitted: false,
		  bufferedRequestCount: 0,
		  corkedRequestsFree: [Object] },
	   writable: true,
	   allowHalfOpen: true,
	   _bytesDispatched: 0,
	   _sockname: null,
	   _pendingData: null,
	   _pendingEncoding: '',
	   server: 
		Server {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 2,
		  _maxListeners: undefined,
		  _connections: 2,
		  _handle: [Object],
		  _usingSlaves: false,
		  _slaves: [],
		  _unref: false,
		  allowHalfOpen: true,
		  pauseOnConnect: false,
		  httpAllowHalfOpen: false,
		  timeout: 120000,
		  keepAliveTimeout: 5000,
		  _pendingResponseData: 0,
		  maxHeadersCount: null,
		  _connectionKey: '6::::5000',
		  [Symbol(asyncId)]: 9 },
	   _server: 
		Server {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 2,
		  _maxListeners: undefined,
		  _connections: 2,
		  _handle: [Object],
		  _usingSlaves: false,
		  _slaves: [],
		  _unref: false,
		  allowHalfOpen: true,
		  pauseOnConnect: false,
		  httpAllowHalfOpen: false,
		  timeout: 120000,
		  keepAliveTimeout: 5000,
		  _pendingResponseData: 0,
		  maxHeadersCount: null,
		  _connectionKey: '6::::5000',
		  [Symbol(asyncId)]: 9 },
	   _idleTimeout: 120000,
	   _idleNext: 
		Socket {
		  connecting: false,
		  _hadError: false,
		  _handle: [Object],
		  _parent: null,
		  _host: null,
		  _readableState: [Object],
		  readable: true,
		  domain: null,
		  _events: [Object],
		  _eventsCount: 10,
		  _maxListeners: undefined,
		  _writableState: [Object],
		  writable: true,
		  allowHalfOpen: true,
		  _bytesDispatched: 0,
		  _sockname: null,
		  _pendingData: null,
		  _pendingEncoding: '',
		  server: [Object],
		  _server: [Object],
		  _idleTimeout: 120000,
		  _idleNext: [Object],
		  _idlePrev: [Circular],
		  _idleStart: 24446,
		  _destroyed: false,
		  parser: [Object],
		  on: [Function: socketOnWrap],
		  _paused: false,
		  read: [Function],
		  _consuming: true,
		  [Symbol(asyncId)]: 109,
		  [Symbol(bytesRead)]: 0,
		  [Symbol(asyncId)]: 110,
		  [Symbol(triggerAsyncId)]: 109 },
	   _idlePrev: 
		TimersList {
		  _idleNext: [Circular],
		  _idlePrev: [Object],
		  _timer: [Object],
		  _unrefed: true,
		  msecs: 120000,
		  nextTick: false },
	   _idleStart: 24478,
	   _destroyed: false,
	   parser: 
		HTTPParser {
		  '0': [Function: parserOnHeaders],
		  '1': [Function: parserOnHeadersComplete],
		  '2': [Function: parserOnBody],
		  '3': [Function: parserOnMessageComplete],
		  '4': [Function: bound onParserExecute],
		  _headers: [],
		  _url: '',
		  _consumed: true,
		  socket: [Circular],
		  incoming: [Circular],
		  outgoing: null,
		  maxHeaderPairs: 2000,
		  onIncoming: [Function: bound parserOnIncoming] },
	   on: [Function: socketOnWrap],
	   _paused: false,
	   read: [Function],
	   _consuming: true,
	   _httpMessage: 
		ServerResponse {
		  domain: null,
		  _events: [Object],
		  _eventsCount: 1,
		  _maxListeners: undefined,
		  output: [],
		  outputEncodings: [],
		  outputCallbacks: [],
		  outputSize: 0,
		  writable: true,
		  _last: false,
		  upgrading: false,
		  chunkedEncoding: false,
		  shouldKeepAlive: true,
		  useChunkedEncodingByDefault: true,
		  sendDate: true,
		  _removedConnection: false,
		  _removedContLen: false,
		  _removedTE: false,
		  _contentLength: null,
		  _hasBody: true,
		  _trailer: '',
		  finished: false,
		  _headerSent: false,
		  socket: [Circular],
		  connection: [Circular],
		  _header: null,
		  _onPendingData: [Function: bound updateOutgoingData],
		  _sent100: false,
		  _expect_continue: false,
		  req: [Circular],
		  locals: {},
		  writeHead: [Function: writeHead],
		  end: [Function: end],
		  [Symbol(outHeadersKey)]: [Object] },
	   [Symbol(asyncId)]: 78,
	   [Symbol(bytesRead)]: 0,
	   [Symbol(asyncId)]: 79,
	   [Symbol(triggerAsyncId)]: 78 },
	_consuming: true,
	_dumped: false,
	next: [Function: next],
	baseUrl: '',
	originalUrl: '/signup',
	_parsedUrl: 
	 Url {
	   protocol: null,
	   slashes: null,
	   auth: null,
	   host: null,
	   port: null,
	   hostname: null,
	   hash: null,
	   search: null,
	   query: null,
	   pathname: '/signup',
	   path: '/signup',
	   href: '/signup',
	   _raw: '/signup' },
	params: {},
	query: {},
	res: 
	 ServerResponse {
	   domain: null,
	   _events: { finish: [Function: bound resOnFinish] },
	   _eventsCount: 1,
	   _maxListeners: undefined,
	   output: [],
	   outputEncodings: [],
	   outputCallbacks: [],
	   outputSize: 0,
	   writable: true,
	   _last: false,
	   upgrading: false,
	   chunkedEncoding: false,
	   shouldKeepAlive: true,
	   useChunkedEncodingByDefault: true,
	   sendDate: true,
	   _removedConnection: false,
	   _removedContLen: false,
	   _removedTE: false,
	   _contentLength: null,
	   _hasBody: true,
	   _trailer: '',
	   finished: false,
	   _headerSent: false,
	   socket: 
		Socket {
		  connecting: false,
		  _hadError: false,
		  _handle: [Object],
		  _parent: null,
		  _host: null,
		  _readableState: [Object],
		  readable: true,
		  domain: null,
		  _events: [Object],
		  _eventsCount: 10,
		  _maxListeners: undefined,
		  _writableState: [Object],
		  writable: true,
		  allowHalfOpen: true,
		  _bytesDispatched: 0,
		  _sockname: null,
		  _pendingData: null,
		  _pendingEncoding: '',
		  server: [Object],
		  _server: [Object],
		  _idleTimeout: 120000,
		  _idleNext: [Object],
		  _idlePrev: [Object],
		  _idleStart: 24478,
		  _destroyed: false,
		  parser: [Object],
		  on: [Function: socketOnWrap],
		  _paused: false,
		  read: [Function],
		  _consuming: true,
		  _httpMessage: [Circular],
		  [Symbol(asyncId)]: 78,
		  [Symbol(bytesRead)]: 0,
		  [Symbol(asyncId)]: 79,
		  [Symbol(triggerAsyncId)]: 78 },
	   connection: 
		Socket {
		  connecting: false,
		  _hadError: false,
		  _handle: [Object],
		  _parent: null,
		  _host: null,
		  _readableState: [Object],
		  readable: true,
		  domain: null,
		  _events: [Object],
		  _eventsCount: 10,
		  _maxListeners: undefined,
		  _writableState: [Object],
		  writable: true,
		  allowHalfOpen: true,
		  _bytesDispatched: 0,
		  _sockname: null,
		  _pendingData: null,
		  _pendingEncoding: '',
		  server: [Object],
		  _server: [Object],
		  _idleTimeout: 120000,
		  _idleNext: [Object],
		  _idlePrev: [Object],
		  _idleStart: 24478,
		  _destroyed: false,
		  parser: [Object],
		  on: [Function: socketOnWrap],
		  _paused: false,
		  read: [Function],
		  _consuming: true,
		  _httpMessage: [Circular],
		  [Symbol(asyncId)]: 78,
		  [Symbol(bytesRead)]: 0,
		  [Symbol(asyncId)]: 79,
		  [Symbol(triggerAsyncId)]: 78 },
	   _header: null,
	   _onPendingData: [Function: bound updateOutgoingData],
	   _sent100: false,
	   _expect_continue: false,
	   req: [Circular],
	   locals: {},
	   writeHead: [Function: writeHead],
	   end: [Function: end],
	   [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] } },
	body: 
	 { email: 'sy.huunguaaasryen96@gmail.com',
	   firstname: 'nguyen',
	   lastname: 'Huu',
	   password: 'aaaaaaaaaaaa' },
	_body: true,
	length: undefined,
	read: [Function],
	_parsedOriginalUrl: 
	 Url {
	   protocol: null,
	   slashes: null,
	   auth: null,
	   host: null,
	   port: null,
	   hostname: null,
	   hash: null,
	   search: null,
	   query: null,
	   pathname: '/signup',
	   path: '/signup',
	   href: '/signup',
	   _raw: '/signup' },
	sessionStore: 
	 MemoryStore {
	   domain: null,
	   _events: 
		{ disconnect: [Function: ondisconnect],
		  connect: [Function: onconnect] },
	   _eventsCount: 2,
	   _maxListeners: undefined,
	   sessions: 
		{ 'qas_j0mOfq1-OmzcBj1MhH-0T2l6yexK': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}' },
	   generate: [Function] },
	sessionID: 'qas_j0mOfq1-OmzcBj1MhH-0T2l6yexK',
	session: 
	 Session {
	   cookie: 
		{ path: '/',
		  _expires: null,
		  originalMaxAge: null,
		  httpOnly: true } },
	_passport: 
	 { instance: 
		Authenticator {
		  _key: 'passport',
		  _strategies: [Object],
		  _serializers: [Array],
		  _deserializers: [Array],
		  _infoTransformers: [],
		  _framework: [Object],
		  _userProperty: 'user',
		  _sm: [Object],
		  Authenticator: [Function: Authenticator],
		  Passport: [Function: Authenticator],
		  Strategy: [Object],
		  strategies: [Object] } },
	route: Route { path: '/signup', stack: [ [Object] ], methods: { post: true } } }
  Executing (default): SELECT `id`, `firstname`, `lastname`, `username`, `about`, `email`, `password`, `last_login`, `status`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'sy.huunguaaasryen96@gmail.com' LIMIT 1;
  User2rrrrr class extends Model {}
  Executing (default): INSERT INTO `Users` (`id`,`firstname`,`lastname`,`email`,`password`,`status`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?);
  serializeUser User {
	dataValues: 
	 { status: 'active',
	   id: 7,
	   email: 'sy.huunguaaasryen96@gmail.com',
	   password: '$2a$08$nNEokwAQqMwfIJNI0uQWL.qLCdv4UX1GACJbxdqhuPBb10N1Z2.AC',
	   firstname: 'nguyen',
	   lastname: 'Huu',
	   updatedAt: 2020-07-15T09:15:01.206Z,
	   createdAt: 2020-07-15T09:15:01.206Z },
	_previousDataValues: 
	 { email: 'sy.huunguaaasryen96@gmail.com',
	   password: '$2a$08$nNEokwAQqMwfIJNI0uQWL.qLCdv4UX1GACJbxdqhuPBb10N1Z2.AC',
	   firstname: 'nguyen',
	   lastname: 'Huu',
	   id: 7,
	   username: undefined,
	   about: undefined,
	   last_login: undefined,
	   status: 'active',
	   createdAt: 2020-07-15T09:15:01.206Z,
	   updatedAt: 2020-07-15T09:15:01.206Z },
	_changed: Set {},
	_options: 
	 { isNewRecord: true,
	   _schema: null,
	   _schemaDelimiter: '',
	   attributes: undefined,
	   include: undefined,
	   raw: undefined,
	   silent: undefined },
	isNewRecord: false }
  